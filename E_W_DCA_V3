// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © juanvargas21979

// Estrategia que acompaña el desarrollo de las ondas de Elliot
//@version=5
strategy("Strategy DCA V3 Elliot Wave [JUAN-VARGAS]",
             shorttitle = "DCA V3 Elliot Wave [JUAN-VARGAS]",
             overlay=true,
             initial_capital=100000000000,
             currency=currency.USD,
             default_qty_value=1,
             default_qty_type=strategy.cash)


//////////////////////////////////////////////////////////////////////////////////////
// FUNCIONES VARIAS                                                                 //
//////////////////////////////////////////////////////////////////////////////////////

// Custom function to truncate (cut) excess decimal places
truncate(_number, _decimalPlaces) =>
    _factor = math.pow(10, _decimalPlaces)
    int(_number * _factor) / _factor
//---------------------

// Obtenemos los lugares decimales del precio
var int decimales_precio = int(math.log10(1/syminfo.mintick))

//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////
// SETEO SELECCION DE FECHA Y OTROS                                                 //
//////////////////////////////////////////////////////////////////////////////////////

// DESDE CUANDO COMIENZA EL ANALISIS
l_starttime = input.time(defval=timestamp("01 Mar 2023 00:00 -0700"), title="StartTime")
l_endtime = input.time(defval=timestamp("31 Dec 2023 00:00 -0700"), title="EndTime")
windows = time >= l_starttime and time <= l_endtime
//--



//--

// CONFIG STOP LOSS, TAKE PROFFIT
take_proffit = input.float(defval=1.00, title="Take Proffit de Operaciones", step=0.5)

//--


// IMPRIMIR LINEAS DE FINAL DE CADA DIA

// function
drawVerticalLine(offset) =>
    line.new(bar_index[offset], 1, bar_index[offset], 10,extend = extend.both , style=line.style_dashed, color=color.new(color.navy,20), width=1)

// Solicitud del usuario
linea_div_dias = input.bool(defval=true, title="Linea Separación Días / Mes")

// logic
is_newday() =>
    d = time("D")
    not na(d) and (na(d[1]) or d > d[1])
is_timeframed() =>
    //timeframe.isintraday or timeframe.isdaily
    timeframe.isminutes

// plotting
if is_timeframed() and is_newday() and linea_div_dias
    drawVerticalLine(0)
//--


// IMPRIMIR LINEAS DE FINAL DE CADA MES
// logic
is_newmonth() =>
    t = time("M")
    not na(t) and (na(t[1]) or t > t[1])
is_timeframe() =>
    //timeframe.isintraday or timeframe.isdaily
    timeframe.isdaily

// plotting
if is_timeframe() and is_newmonth() and linea_div_dias
    drawVerticalLine(0)

//--


//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// VARIABLES PERSISTENTES                                                           //
//////////////////////////////////////////////////////////////////////////////////////
nada = 0
var float operaciones_de_compra = 0.00 
var float precio_de_compra = 0.00
var float precio_promedio = 0.00
var float precio_salida = 0.00
//var float take_proffit_operaciones = na
var bool buySignal = false
var bool sellSignal = false
var bool comprar2 = na
var bool comprar = na

//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// INDICADOR A EVALUAR                                                              //
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////
// EMAS PARA SABER EL POSICIONAMIENTO DEL PERCIO                                    //
//////////////////////////////////////////////////////////////////////////////////////
emafast = input.int(defval=10, title="Ema Fast", minval = 5, step=1, group="Setup EMAS")
ema_fast = ta.ema(close,emafast)
plot(ema_fast,"Ema Fast",color=color.new(#006600, 40), linewidth=1)

emaslow = input.int(defval=55, title="Ema Slow", minval = 13, step=1, group="Setup EMAS")
ema_slow = ta.ema(close,emaslow)
plot(ema_slow,"Ema Slow",color=color.new(#FF9900, 40), linewidth=1)

ematrend = input.int(defval=200, title="Ema Trend", minval = 89, step=1, group="Setup EMAS")
ema_trend = ta.ema(close,ematrend)
plot(ema_trend,"Ema Trend",color=color.new(#0066FF, 40), linewidth=1)


//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// OPERACIONES DE MERCADO  --> SALIDA                                               //
//////////////////////////////////////////////////////////////////////////////////////

// ## CHEQUE SI ESTOY COMPRADO PARA EFECTUAR LA SALIDA
comprado_salida = strategy.position_size > 0

// ## SALIMOS DEL MERCADO
if comprado_salida
    // salir por Take Proffit
    if high >= precio_salida
        strategy.close("compra", comment="TP :" + str.tostring(precio_salida,"0.00"),alert_message="EXIT")
        operaciones_de_compra := 0.00
        precio_de_compra := 0.00
        precio_promedio := 0.00
        precio_salida := 0.00
        //color_linea = color.new(#f35858, 80)
        //line.new(bar_index, 0, bar_index, 1e6, xloc.bar_index, extend.both, color_linea, line.style_solid, 8)
        sellSignal := true

//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////////////////////////////
// OPERACIONES DE MERCADO  --> INGRESO                                              //
//////////////////////////////////////////////////////////////////////////////////////
// cheque para saber si es la primera operacion o los agregados de ordenes piramidales
comprado = strategy.position_size > 0

// condicion de compra en base al indicador de tendencia.
//comprar = SR_trend == 0 and SR_trend[1] == 1

// condicion de compra en base a la estregia del cierre de vela por encima de la tendencia
// pobrar para mercado alcista o bajista cambiando la compra por arriba o por abajo de la tendencia
//comprar := close < val
comprar := ema_fast > ema_slow


// mercado bull - primera compra
if not comprado and windows and comprar and not comprar[1]
    cantidad = 1 //math.round(strategy.equity / close) 
    strategy.entry("compra",strategy.long,qty=cantidad,comment="PE : " + str.tostring(close,"0.00"),alert_message="LONG")
    operaciones_de_compra := operaciones_de_compra + 1
    precio_de_compra := close
    precio_promedio := precio_promedio + precio_de_compra
    //color_linea = color.new(#2dcc28,80)
    //line.new(bar_index, 0, bar_index, 1e6, xloc.bar_index, extend.both, color_linea, line.style_solid, 8)
    buySignal := true
    
// mercado bull - agregado de ordenes piramidales
if comprado and windows and comprar and not comprar[1]
    cantidad = 1 //math.round(strategy.equity / close) 
    strategy.order("compra",strategy.long,qty=cantidad,comment="PE : " + str.tostring(close,"0.00"),alert_message="LONG")
    operaciones_de_compra := operaciones_de_compra + 1
    precio_de_compra := close
    precio_promedio := precio_promedio + precio_de_compra
    //color_linea = color.new(#2dcc28,80)
    //line.new(bar_index, 0, bar_index, 1e6, xloc.bar_index, extend.both, color_linea, line.style_solid, 8)
    buySignal := true

//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////
// CONTEO Y ANALISIS DE LAS OPERACIONES DE COMPRA                                   //
//////////////////////////////////////////////////////////////////////////////////////

precio_promedio_OP = precio_promedio / operaciones_de_compra 
precio_salida := precio_promedio_OP * ( 1 + (take_proffit / 100))


//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////////////////////////////
// PLOT DE OPERACIONES                                                              //
//////////////////////////////////////////////////////////////////////////////////////


//plotshape(not buySignal[1] and  buySignal ? goLong : na, title="Arrow Up", style=shape.triangleup, location=location.belowbar, size=size.tiny, color=color.navy)
//plotshape(not sellSignal[1]  and sellSignal ? goShort : na, title="Arrow Down", style=shape.triangledown, location=location.abovebar, size=size.tiny, color=color.red)

myColorbuy = buySignal ? color.new(color.rgb(3, 218, 38), 80) : na
bgcolor(myColorbuy)

myColorsell = sellSignal ? color.new(#fd2e2e, 80) : na
bgcolor(myColorsell)

buySignal := false
sellSignal := false


//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////
// TABLA CON INFORMACION A MOSTRAR DE LAS OPERACIONES REALIZADAS                    //
//////////////////////////////////////////////////////////////////////////////////////
var table testTable = table.new(position.top_right, 5, 4, border_width=1)
f_fillCell(_table, _column, _row, _title, _value, _bgcolor, _txtcolor) =>
    _cellText = _title + "\n" + _value
    table.cell(_table, _column, _row, _cellText, bgcolor=_bgcolor, text_color=_txtcolor)
var bgcolor = color.new(color.black,0)

// Informacion para mostrar
// Columna 1
f_fillCell(testTable, 0, 0, "TOTAL OP", str.tostring(operaciones_de_compra), bgcolor, color.white)
f_fillCell(testTable, 0, 1, "P P C", "$ " + str.tostring(truncate(precio_promedio_OP,decimales_precio)), color.navy, color.white)
f_fillCell(testTable, 0, 2, "EXIT OP","$ " + str.tostring(truncate(precio_salida,decimales_precio)), color.green, color.white)
//f_fillCell(testTable, 0, 2, "L T Loss", str.tostring(nada), color.red, color.white)
//f_fillCell(testTable, 0, 3, "S T Loss", str.tostring(nada), color.red, color.white)
//--

//Columna 2
//f_fillCell(testTable, 1, 0, "T OP", str.tostring(operaciones_de_compra), bgcolor, color.white)
//f_fillCell(testTable, 0, 1, "Win Rate:", tostring(truncate((strategy.wintrades/strategy.closedtrades)*100,2)) + "%", bgcolor, color.white)

//f_fillCell(testTable, 1, 1, "Winn Trade", str.tostring(nada), color.green, color.white)
//f_fillCell(testTable, 1, 2, "Loss Trade", str.tostring(nada), color.red, color.white)

//porcentaje_positivo = 2
//porcentaje_negativo = 1
//if porcentaje_positivo > porcentaje_negativo
//    f_fillCell(testTable, 1, 3, "R O I", "% " + str.tostring(truncate(( nada ),2)), color.green, color.white)
//else
//    f_fillCell(testTable, 1, 3, "R O I", "% " + str.tostring(truncate(( nada ),2)), color.red, color.white)


//////////////////////////////////////////////////////////////////////////////////////
//==================================================================================//
//////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////        COLORES        ////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Black   = color.new(#000000, 40)    ,      Charcoal= #363A45,      Gray    = #787B86,      LightGray = #9C9C9C,      Silver  = #C0C0C0,      White   = #FFFFFF
Brown   = #A52A2A,      Red     = color.new(#FF0000,30) ,      Pink    = #FF69B4,      Gold      = #D4AF37,      Orange  = #FF6A00,      Yellow  = #FFFF00
Green2   = #00AF00,      Teal    = #008080,      Lime    = #00FF0B,      Green = color.new(#008000,30)
Navy    = color.new(#311B92,30) ,      Blue    = #0094FF,      Aqua    = #00BCD4       // #2962FF #00FFFF
Purple  = #800080,      Fucshia = #E040FB   //#FF00FF
None = color.new(Black, 100)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////    ANALISIS DE DATOS PARA LA TABLA DE INFO    ////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
hull5m = request.security(syminfo.tickerid, "5", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_5m = request.security(syminfo.tickerid, "5", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_5m         = close_5m > hull5m ? Green : Red
text_5m        = close_5m > hull5m ?  "🡅" : "🡇"
//--
hull15m = request.security(syminfo.tickerid, "15", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_15m = request.security(syminfo.tickerid, "15", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_15m         = close_15m > hull15m? Green : Red
text_15m        = close_15m > hull15m?  "🡅" : "🡇"
//--
hull30m = request.security(syminfo.tickerid, "30", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_30m = request.security(syminfo.tickerid, "30", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_30m         = close_30m > hull30m? Green : Red
text_30m        = close_30m > hull30m?  "🡅" : "🡇"
//--
hull1h = request.security(syminfo.tickerid, "60", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_1h = request.security(syminfo.tickerid, "60", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_60m         = close_1h > hull1h? Green : Red
text_60m        = close_1h > hull1h?  "🡅" : "🡇"
//--
hull4h = request.security(syminfo.tickerid, "240", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_4h = request.security(syminfo.tickerid, "240", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_240m         = close_4h > hull4h ? Green : Red
text_240m        = close_4h > hull4h?  "🡅" : "🡇"
//--
hullD = request.security(syminfo.tickerid, "D", ta.ema(close,55), lookahead=barmerge.lookahead_off)
close_1d = request.security(syminfo.tickerid, "D", ta.ema(close,10), lookahead=barmerge.lookahead_off)
col_d         = close_1d > hullD ? Green : Red
text_d        = close_1d > hullD ?  "🡅" : "🡇"
//--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////// PLOTS  TABLA DE DATOS ////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var tbl = table.new(position.bottom_right, 10, 11, frame_color=color.white, frame_width=1, border_width=2, border_color=color.new(color.white, 100))        //table.new(position.top_right, 6, 41, frame_color=#151715, frame_width=1, border_width=2, border_color=color.new(color.white, 100))
//--
table.cell(tbl, 0, 0, 'Chart', text_halign = text.align_center, bgcolor = Black, text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 0, 'Trend', text_halign = text.align_center, bgcolor = Black, text_color = color.white, text_size = size.normal)
//--
table.cell(tbl, 0, 1, '5m',  text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
table.cell(tbl, 0, 2, '15m', text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
table.cell(tbl, 0, 3, '30m',  text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
table.cell(tbl, 0, 4, '1h',  text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
table.cell(tbl, 0, 5, '4h',  text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
table.cell(tbl, 0, 6, 'D',  text_halign = text.align_center, bgcolor = Navy, text_color = color.white, text_size = size.normal)
//--
table.cell(tbl, 1, 1, text_5m,  text_halign = text.align_center, bgcolor = col_5m,  text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 2, text_15m,  text_halign = text.align_center, bgcolor = col_15m,  text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 3, text_30m, text_halign = text.align_center, bgcolor = col_30m, text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 4, text_60m, text_halign = text.align_center, bgcolor = col_60m, text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 5, text_240m, text_halign = text.align_center, bgcolor = col_240m, text_color = color.white, text_size = size.normal)
table.cell(tbl, 1, 6, text_d,text_halign = text.align_center, bgcolor = col_d,text_color = color.white, text_size = size.normal)
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

